<?php

/**
 * Abstraction of the user_tokens table
 * Generated by Abstractor from hphio\util
 */

namespace Hph\Models;


use Hph\DBEnabledClassTrait;
use League\Container\Container;
/**
 * @codeCoverageIgnore
 */
class UserTokenBase
{

    use DBEnabledClassTrait;

    /* <generated_73834cc333b9258730d9c055bfd28548a335c292> */

    /* <database fields> */

    public $id           = null;
    public $user         = null;
    public $token        = null;
    public $delete_after = null;
    public $jti          = null;

    /* </database fields> */


    /* <Dependency Injection Fields> */

    public ?Container $container = null;

    /* </Dependency Injection Fields> */

    public function __construct(Container $container) {
        $this->container = $container;
    }

    /**
     * Returns an associative array of values for this class.
     * @return array
     */

    public function getMyValues() : array {
        return [ "id"           => $this->id
               , "user"         => $this->user
               , "token"        => $this->token
               , "delete_after" => $this->delete_after
               , "jti"          => $this->jti
               ];
    }

    public function insert() {
        $sql = " INSERT INTO `user_tokens`
                (  `user`
                , `token`
                , `delete_after`
                , `jti`
                )
                VALUES
                ( :user
                , :token
                , :delete_after
                , :jti
                )";
        $values = $this->getMyValues();
        unset($values['id']);

        $this->prepareExecute($sql, $values);

        $this->id = $this->db->lastinsertid();
        return $this->id;

    }

    public function update() {
        $sql = "UPDATE `user_tokens`
                SET
                `user` = :user,
                `token` = :token,
                `delete_after` = :delete_after,
                `jti` = :jti
                WHERE `id` = :id
                LIMIT 1";

        $values = $this->getMyValues();
        $this->prepareExecute($sql, $values);
    }

    /* </generated_73834cc333b9258730d9c055bfd28548a335c292> */
}
